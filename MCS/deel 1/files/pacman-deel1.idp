vocabulary PacmanVoc{

	type dir //We guarantee you that dir, Left, Right, Up, Down will always be correctly interpreted in structures. You should not check this.
	Down: dir
	Left: dir
	Right: dir
	Up: dir

	type xCo isa int
	type yCo isa int

	type agent //The ghosts and pacman
	pacman:agent

	NoPos(xCo,yCo) 
	Wall(xCo,yCo,dir)


	/*Van wat hieronder staat kan een deel gegeven zijn, een deel gevraagd*/
	Gold(xCo,yCo)
	GameLost
	GameWon
	Position(agent,xCo,yCo)
	
	PreviousMove(agent,dir)
	Move(agent,dir)

	//Eigen predicaten
	Reach(xCo,yCo,xCo,yCo)
	ReachInStep(xCo,yCo,xCo,yCo)

	

}

theory PacmanTheory:PacmanVoc{
	// Wall predicaat symmetrisch maken
	! y1[yCo],y2[yCo] : Wall(x,y1,Down) & y2=-1+y1 <=> Wall(x,y2,Up).
	//! y1[yCo],y2[yCo] : Wall(x,y1,Up) & y2=1+y1 => Wall(x,y2,Down).
	! x1[xCo],x2[xCo] : Wall(x1,y,Right) & x2=-1+x1 <=> Wall(x2,y,Left).
	//! x1[xCo],x2[xCo] : Wall(x1,y,Left) & x2=1+x1 => Wall(x2,y,Right).
	
	// Alle vakjes zijn aaneengesloten
	! x1[xCo],y1[yCo],x2[xCo],y2[yCo] : ReachInStep(x1,y1,x2,y2) <=> ( (x1=x2+1 & ~Wall(x1,y1,Right))
																		| (y1=y2+1 & ~Wall(x1,y1,Up)) ).
	! x1[xCo],y1[yCo],x2[xCo],y2[yCo] : ReachInStep(x1,y1,x2,y2) <=> ReachInStep(x2,y2,x1,y1). 
	
	
	// GameLost en GameWon hebben de juiste interpretatie in functie v d andere predicaten
	~ (? x[xCo],y[yCo] : Gold(x,y)) <=> GameWon.
	(? x[xCo],y[yCo], a[agent]: Position(pacman,x,y) & Position(a,x,y) & ~a=pacman)<=>GameLost.
	
	// Iedereen is op exact 1 plaats
	(Position(a,x1,y1)&Position(a,x2,y2))=>(x1=x2&y1=y2).
	
	// Niemand staat op plaatsen waar geen vakje is
	
	// Er kan enkel goud liggen op plaatsen waar een vakje is
	
	// Niemand beweegt door muren
	
	// Iedereen kan hoogstens in 1 richting tegelijk bewegen
	
		
}


